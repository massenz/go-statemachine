# Copyright AlertAvert Inc. (c) 2023. All rights reserved.
#
# Docker Compose for Statemachine local development ONLY.
# As this expects a couple of Env Vars to be set, and SQS queues to
# be created in Localstack, use with `make start` instead of
# invoking directly.

version: '3.2'
services:
  redis:
    container_name: "redis"
    image: "redis:6.2-alpine"
    hostname: redis
    command: "redis-cmd --save 60 1 --loglevel warning"
    volumes:
      - "${TMPDIR:-/tmp}/redis:/data"
    ports:
      - "6379:6379"
    networks:
      - sm-net

  localstack:
    container_name: "awslocal"
    image: "localstack/localstack:1.3"
    hostname: awslocal
    environment:
      - AWS_REGION=us-west-2
      - EDGE_PORT=4566
      - SERVICES=sqs
    ports:
      - '4566:4566'
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - sm-net
  server:
    depends_on:
      - localstack
      - redis
    networks:
      - sm-net
    ports:
      - '7398:7398'
    image: "massenz/statemachine:${RELEASE}"
    environment:
      AWS_ENDPOINT: "http://awslocal:4566"
      AWS_REGION: us-west-2
      AWS_PROFILE: sm-bot
      TIMEOUT: 200ms
      DEBUG: -debug
      EVENTS_Q: "events"
      NOTIFICATIONS_Q: "notifications"
    volumes:
      - ${BASEDIR}/docker/aws-credentials:/home/sm-bot/.aws/credentials
      - ${BASEDIR}/certs:/etc/statemachine/certs

# To connect to the servers in this stack, from a docker run
# via Docker, use `--network sm_sm-net`.
# The hosts listed above will then be reachable at the given names,
# on whatever ports are exposed.
networks:
  sm-net:
    ipam:
      config:
      - subnet: 172.1.1.0/24
